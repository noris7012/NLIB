/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.awesomepiece.pl.swig;

public class GameClientHandler {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GameClientHandler(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GameClientHandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        nlibJNI.delete_GameClientHandler(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    nlibJNI.GameClientHandler_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    nlibJNI.GameClientHandler_change_ownership(this, swigCPtr, true);
  }

  public void HandleConnected(GameClientInterface client) {
    nlibJNI.GameClientHandler_HandleConnected(swigCPtr, this, GameClientInterface.getCPtr(client), client);
  }

  public void HandlePacket(GameClientInterface client, SWIGTYPE_p_GamePacket packet) {
    nlibJNI.GameClientHandler_HandlePacket(swigCPtr, this, GameClientInterface.getCPtr(client), client, SWIGTYPE_p_GamePacket.getCPtr(packet));
  }

  public void HandleDisconnected(GameClientInterface client) {
    nlibJNI.GameClientHandler_HandleDisconnected(swigCPtr, this, GameClientInterface.getCPtr(client), client);
  }

  public GameClientHandler() {
    this(nlibJNI.new_GameClientHandler(), true);
    nlibJNI.GameClientHandler_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}

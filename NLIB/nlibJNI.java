/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.awesomepiece.pl.swig;

public class nlibJNI {
  public final static native void GameConfig_host_set(long jarg1, GameConfig jarg1_, String jarg2);
  public final static native String GameConfig_host_get(long jarg1, GameConfig jarg1_);
  public final static native void GameConfig_port_set(long jarg1, GameConfig jarg1_, long jarg2);
  public final static native long GameConfig_port_get(long jarg1, GameConfig jarg1_);
  public final static native void GameConfig_loss_mask_set(long jarg1, GameConfig jarg1_, long jarg2);
  public final static native long GameConfig_loss_mask_get(long jarg1, GameConfig jarg1_);
  public final static native void GameConfig_loss_rate_set(long jarg1, GameConfig jarg1_, float jarg2);
  public final static native float GameConfig_loss_rate_get(long jarg1, GameConfig jarg1_);
  public final static native long new_GameConfig();
  public final static native void delete_GameConfig(long jarg1);
  public final static native void GameClientInterface_WritePacket(long jarg1, GameClientInterface jarg1_, long jarg2, long jarg3);
  public final static native boolean GameClientInterface_Connect(long jarg1, GameClientInterface jarg1_, long jarg2, GameConfig jarg2_);
  public final static native boolean GameClientInterface_IsConnected(long jarg1, GameClientInterface jarg1_);
  public final static native void GameClientInterface_Disconnect(long jarg1, GameClientInterface jarg1_);
  public final static native void delete_GameClientInterface(long jarg1);
  public final static native void delete_GameClientHandler(long jarg1);
  public final static native void GameClientHandler_HandleConnected(long jarg1, GameClientHandler jarg1_, long jarg2, GameClientInterface jarg2_);
  public final static native void GameClientHandler_HandlePacket(long jarg1, GameClientHandler jarg1_, long jarg2, GameClientInterface jarg2_, long jarg3);
  public final static native void GameClientHandler_HandleDisconnected(long jarg1, GameClientHandler jarg1_, long jarg2, GameClientInterface jarg2_);
  public final static native long new_GameClientHandler();
  public final static native void GameClientHandler_director_connect(GameClientHandler obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void GameClientHandler_change_ownership(GameClientHandler obj, long cptr, boolean take_or_release);
  public final static native long GameClientFactory_Create(long jarg1, GameClientHandler jarg1_);
  public final static native long new_GameClientFactory();
  public final static native void delete_GameClientFactory(long jarg1);
  public final static native boolean GameServerInterface_Listen(long jarg1, GameServerInterface jarg1_, long jarg2, GameConfig jarg2_);
  public final static native void delete_GameServerInterface(long jarg1);
  public final static native void delete_GameServerHandler(long jarg1);
  public final static native void GameServerHandler_HandleConnected(long jarg1, GameServerHandler jarg1_, long jarg2);
  public final static native void GameServerHandler_HandlePacket(long jarg1, GameServerHandler jarg1_, long jarg2, long jarg3);
  public final static native void GameServerHandler_HandleDisconnected(long jarg1, GameServerHandler jarg1_, long jarg2);
  public final static native long new_GameServerHandler();
  public final static native void GameServerHandler_director_connect(GameServerHandler obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void GameServerHandler_change_ownership(GameServerHandler obj, long cptr, boolean take_or_release);
  public final static native long GameServerFactory_Create(long jarg1, GameServerHandler jarg1_);
  public final static native long new_GameServerFactory();
  public final static native void delete_GameServerFactory(long jarg1);

  public static void SwigDirector_GameClientHandler_HandleConnected(GameClientHandler jself, long client) {
    jself.HandleConnected((client == 0) ? null : new GameClientInterface(client, false));
  }
  public static void SwigDirector_GameClientHandler_HandlePacket(GameClientHandler jself, long client, long packet) {
    jself.HandlePacket((client == 0) ? null : new GameClientInterface(client, false), new SWIGTYPE_p_GamePacket(packet, true));
  }
  public static void SwigDirector_GameClientHandler_HandleDisconnected(GameClientHandler jself, long client) {
    jself.HandleDisconnected((client == 0) ? null : new GameClientInterface(client, false));
  }
  public static void SwigDirector_GameServerHandler_HandleConnected(GameServerHandler jself, long session) {
    jself.HandleConnected((session == 0) ? null : new SWIGTYPE_p_GameSessionInterface(session, false));
  }
  public static void SwigDirector_GameServerHandler_HandlePacket(GameServerHandler jself, long session, long packet) {
    jself.HandlePacket((session == 0) ? null : new SWIGTYPE_p_GameSessionInterface(session, false), new SWIGTYPE_p_GamePacket(packet, true));
  }
  public static void SwigDirector_GameServerHandler_HandleDisconnected(GameServerHandler jself, long session) {
    jself.HandleDisconnected((session == 0) ? null : new SWIGTYPE_p_GameSessionInterface(session, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}

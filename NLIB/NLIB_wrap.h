/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_nlib_WRAP_H_
#define SWIG_nlib_WRAP_H_

class SwigDirector_GameClientHandler : public GameClientHandler, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_GameClientHandler(JNIEnv *jenv);
    virtual ~SwigDirector_GameClientHandler();
    virtual void HandleConnected(GameClientInterface *client);
    virtual void HandlePacket(GameClientInterface *client, GamePacket packet);
    virtual void HandleDisconnected(GameClientInterface *client);
public:
    bool swig_overrides(int n) {
      return (n < 3 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<3> swig_override;
};

class SwigDirector_GameServerHandler : public GameServerHandler, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_GameServerHandler(JNIEnv *jenv);
    virtual ~SwigDirector_GameServerHandler();
    virtual void HandleConnected(GameSessionInterface *session);
    virtual void HandlePacket(GameSessionInterface *session, GamePacket packet);
    virtual void HandleDisconnected(GameSessionInterface *session);
public:
    bool swig_overrides(int n) {
      return (n < 3 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<3> swig_override;
};


#endif
